name: CI - Tests

on:
  push:
    branches: ["**"]
  pull_request:

permissions:
  contents: read

concurrency:
  group: ci-tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend-tests:
    name: Backend (pytest)
    runs-on: ubuntu-latest
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Install backend deps
        run: |
          python -m pip install --upgrade pip
          if [ -f app/requirements.txt ]; then pip install -r app/requirements.txt; fi
          if [ -f app/requirements-dev.txt ]; then pip install -r app/requirements-dev.txt; fi

      - name: Run pytest
        run: |
          pytest --cov=app --cov-report=term-missing -m "not integration"

      - name: Upload coverage (backend)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-backend-${{ github.sha }}
          path: |
            ./.coverage
            ./htmlcov/**
          if-no-files-found: ignore

  frontend-tests:
    name: Frontend (vitest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        working-directory: frontend
        run: |
          npm ci || npm install

      - name: Run vitest
        working-directory: frontend
        run: |
          npm run test:ci

      - name: Upload coverage (frontend)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-frontend-${{ github.sha }}
          path: |
            frontend/coverage/**
          if-no-files-found: ignore
