name: flask-ecr-eks-starter

services:
  web:
    environment:
      - PYTHONPATH=/          # so Python can see /app as the "app" package (path "/" contains "app")
    build:
      context: ..
      dockerfile: docker/web.Dockerfile
    image: yourapp/web:${TAG:-dev}
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
    ports:
      - "${WEB_PORT:-8000}:8000"
    command: >
      sh -c "gunicorn app.wsgi:app -c /app/gunicorn_conf.py"

  db:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
  
  frontend:
    build:
      context: ..
      dockerfile: docker/frontend.dev.Dockerfile
    image: yourapp/frontend:${TAG:-dev}
    depends_on:
      - web
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true      # better file watching on Windows/WSL
    volumes:
      - ../frontend:/app              # your source
      - frontend_node_modules:/app/node_modules  # keep deps inside container



volumes:
  pgdata:
  redisdata:
  frontend_node_modules:

